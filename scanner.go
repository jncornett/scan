// Package scan implements utilities for wrapping and manipulating string
// scanners.
package scan

// Scanner is an interface that wraps basic scanning methods.
// The builtin Scanner from the bufio package implements this interface.
//
// Bytes returns the most recent token generated by a call to Scan.
// The underlying array may point to data that will be overwritten by a
// subsequent call to scan.
//
// Err returns the first non-EOF error that was encountered by the Scanner.
//
// Scan advances the scanner to the next token, which will then be available
// through the Bytes() or Text() method. After Scan returns false, a call to
// Err returns any error that may have occurred during the last call to Scan.
// Scan may panic during a subsequent call if it returned false.
//
// Text returns the most recent token generated by a call to Scan as a newly
// allocated string.
// This is different from Bytes, which generally does no allocation.
type Scanner interface {
	Bytes() []byte
	Err() error
	Scan() bool
	Text() string
}

// BufferedScanner is an interface that groups the basic Scanner interface
// methods with the Unscan method.
//
// Unscan reverses the scanner by one token. Calling Unscan before any calls
// to Scan is a no-op.
// If Unscan is called more than once without an intermediate call to Scan,
// it may panic.
type BufferedScanner interface {
	Scanner
	Unscan()
}

// View is an interface that presents a non-mutating view of a Scanner.
type View interface {
	Bytes() []byte
	Err() error
	Text() string
}
